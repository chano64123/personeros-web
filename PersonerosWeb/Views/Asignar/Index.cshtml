@using PersonerosWeb.Resourses;
@using PersonerosWeb.Models;
@{
    ViewBag.Title = "Asignar Responsabilidades";
    List<SelectListItem> tiposUsuario = (List<SelectListItem>)ViewBag.tiposUsuario;
    List<SelectListItem> instituciones = (List<SelectListItem>)ViewBag.instituciones;
    ViewBag.urlBase = Recursos.baseUrlApi;
}

<div class="row mt-3">
    <div class="col text-black">
        <h2 class="text-center">@ViewBag.Title</h2>
        <hr />
    </div>
</div>
@using(Html.BeginForm("GuardarUsuarioInstitucion", "Asignar", FormMethod.Post, new { @class = "needs-validation", @novalidate = "novalidate" })) {
    @*@Html.HiddenFor(m => m.idPersona)*@
    <div class="card">
        <div class="card-body">
            <div class="row">
                <fieldset class="col">
                    <legend>Usuario</legend>
                    <div class="form-floating mb-3">
                        @Html.DropDownList("idTipoUsuario", tiposUsuario, new { @class = "form-select", @required = "required" })
                        @*@Html.LabelFor(model => model.idInstitucionVotacion)*@
                        <div class="invalid-feedback">Algo está mal!</div>
                    </div>
                    <div class="form-floating mb-3">
                        @Html.DropDownList("idUsuario", new List<SelectListItem>(), new { @class = "form-select", @required = "required" })
                        @*@Html.LabelFor(model => model.idInstitucionVotacion)*@
                        <div class="invalid-feedback">Algo está mal!</div>
                    </div>
                </fieldset>

                <fieldset class="col">
                    <legend>Institución - Mesa</legend>
                    <div class="form-floating mb-3">
                        @Html.DropDownList("idInstitucion", instituciones, new { @class = "form-select", @required = "required" })
                        @*@Html.LabelFor(model => model.idInstitucionVotacion)*@
                        <div class="invalid-feedback">Algo está mal!</div>
                    </div>
                    <div class="form-floating mb-3">
                        @Html.DropDownList("idMesa", new List<SelectListItem>(), new { @class = "form-select", @required = "required" })
                        @*@Html.LabelFor(model => model.idInstitucionVotacion)*@
                        <div class="invalid-feedback">Algo está mal!</div>
                    </div>
                </fieldset>
            </div>
            
            <div class="row">
                <div class="col align-self-center">
                    <button @*data-bs-dismiss="modal"*@ type="submit" class="col-12 btn btn-primary btn-lg">Guardar</button>
                </div>
                <div class="col align-self-center">
                    <a data-bs-dismiss="modal" class="col-12 btn btn-danger btn-lg">Cancelar</a>
                </div>
            </div>
        </div>
    </div>
}
<script src="~/Assets/js/validation/validation.bootstrap.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        var cmbTipoUsuario = $('#idTipoUsuario');
        var cmbUsuario = $('#idUsuario');
        var cmbInstitucion = $('#idInstitucion');
        var cmbMesa = $('#idMesa');

        crearComboBusqueda(cmbTipoUsuario, 'Seleccione un Tipo de Usuario');
        crearComboBusqueda(cmbUsuario, 'Selecicone un Usuario');
        crearComboBusqueda(cmbInstitucion, 'Seleccione una Institución');
        crearComboBusqueda(cmbMesa, 'Seleccione una Mesa');

        //para soporte
        var usuarios;
        var instituciones;
        var mesas;
        var urlbase = "https://personerosbackend.herokuapp.com/";

        //eventos
        $('#idTipoUsuario').on('select2:select', function (e) {
            var data = e.params.data;
            var idTipoUsuario = data.id;

            var endpoint = "api/Usuario/TipoUsuario/";
            var url = urlbase + endpoint + idTipoUsuario;

            limpiarCombo(cmbUsuario);
            mostrarAlertBusqueda("Buscando usuarios del tipo " + data.text);
            fetch(url).then(request => request.json())
                .then(response => {
                    usuarios = response.result;
                    var cantidadUsuarios = usuarios.length
                    Swal.close();
                    if (cantidadUsuarios => 1) {
                        var datos = armarObjetoUsuario(usuarios);
                        //aca se cargan los nuevos elementos al combo
                        crearOpcionVacia(cmbUsuario)
                        crearComboBusqueda(cmbUsuario, "Seleccione un Usuario",'',datos)
                        Swal.fire("Bien", `Se encontrarón ${cantidadUsuarios} usuarios`, "success")
                    } else {
                        Swal.fire("Error", `No se encontraron usuarios del tipo ${data.text}, primero cree uno`, "error")
                    }
                });
        });

        $('#idInstitucion').on('select2:select', function (e) {
            var data = e.params.data;
            var idInstitucion = data.id;

            var endpoint = "api/Mesa/Institucion/";
            var url = urlbase + endpoint + idInstitucion;

            limpiarCombo(cmbMesa);
            mostrarAlertBusqueda("Buscando mesas de la intitución " + data.text);
            fetch(url).then(request => request.json())
                .then(response => {
                    mesas = response.result;
                    var cantidadMesas = mesas.length
                    Swal.close();
                    if (cantidadMesas => 1) {
                        var datos = armarObjetoMesa(mesas);
                        //aca se cargan los nuevos elementos al combo
                        crearOpcionVacia(cmbMesa)
                        crearComboBusqueda(cmbMesa, "Seleccione una Mesa", '', datos)
                        Swal.fire("Bien", `Se encontrarón ${cantidadMesas} mesas`, "success")
                    } else {
                        Swal.fire("Error", `No se encontraron mesas de la institución ${data.text}, primero cree una`, "error")
                    }
                });
        });
    });


    function limpiarCombo(elemento) {
        elemento.empty();
    }

    function crearOpcionVacia(elemento) {
        elemento.append($('<option />', {}));
    }

    function armarObjetoUsuario(usuarios) {
        nombres = usuarios.map(x => ({
            id: x.idUsuario,
            text: x.persona.nombres + " " + x.persona.apellidoPaterno + " " + x.persona.apellidoMaterno,
            selected: false
        }));

        return nombres;
    }

    function armarObjetoMesa(mesas) {
        numeros = mesas.map(x => ({
            id: x.idMesa,
            text: x.numero,
            selected: false
        }));

        return numeros;
    }

    function mostrarAlertBusqueda(text) {
        Swal.fire({
            title: text,
            didOpen: () => {
                Swal.showLoading();
            }
        });
    }
</script>




@*<div class="project-description">

    <h4>Descripción de proyecto</h4>
    <ul class="nav nav-pills pb-3" id="pills-tab" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="pills-enlaces-tab" data-bs-toggle="pill" data-bs-target="#pills-enlaces" type="button" role="tab" aria-controls="pills-enlaces" aria-selected="false">
                Enlaces
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="pills-coordinadores-tab" data-bs-toggle="pill" data-bs-target="#pills-coordinadores" type="button" role="tab" aria-controls="pills-coordinadores" aria-selected="false">
                Coordinadores
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="pills-personeros-tab" data-bs-toggle="pill" data-bs-target="#pills-personeros" type="button" role="tab" aria-controls="pills-personeros" aria-selected="false">
                Personeros
            </button>
        </li>
    </ul>
    <div class="tab-content" id="pills-tabContent">
        <div class="tab-pane fade show active" id="pills-enlaces" role="tabpanel" aria-labelledby="pills-enlaces-tab">
            <div class="col-12 table-responsive mt-2 mx-auto">
                Aca lo de enlaces
            </div>
        </div>

        <div class="tab-pane fade" id="pills-coordinadores" role="tabpanel" aria-labelledby="pills-coordinadores-tab">
            <div class="col-12 table-responsive mt-2 mx-auto">
                Aca lo de coordinadores
            </div>
        </div>
        <div class="tab-pane fade" id="pills-personeros" role="tabpanel" aria-labelledby="pills-personeros-tab">
            <div class="col-12 table-responsive mt-2 mx-auto">
                Aca lo de personeros
            </div>
        </div>
        <div class="tab-pane fade" id="pills-reporte" role="tabpanel" aria-labelledby="pills-reporte-tab">
            <div id="container"></div>
        </div>
    </div>
</div>*@